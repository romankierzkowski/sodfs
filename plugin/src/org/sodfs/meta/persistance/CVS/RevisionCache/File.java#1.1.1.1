/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package org.sodfs.meta.persistance;

import java.io.Serializable;
import java.util.Collection;
import java.util.Date;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.sodfs.meta.api.entities.DirectoryEntity;
import org.sodfs.meta.api.entities.FileEntity;

/**
 *
 * @author Roman
 */
@Entity
@Table(name = "files")
@NamedQueries({@NamedQuery(name = "File.findByName", query = "SELECT f FROM File f WHERE f.name = :name"), @NamedQuery(name = "File.findByNominalSize", query = "SELECT f FROM File f WHERE f.nominalSize = :nominalSize"), @NamedQuery(name = "File.findByAllocationSize", query = "SELECT f FROM File f WHERE f.allocationSize = :allocationSize"), @NamedQuery(name = "File.findByModified", query = "SELECT f FROM File f WHERE f.modified = :modified"), @NamedQuery(name = "File.findByCreated", query = "SELECT f FROM File f WHERE f.created = :created"), @NamedQuery(name = "File.findByAccessed", query = "SELECT f FROM File f WHERE f.accessed = :accessed"), @NamedQuery(name = "File.findByChanged", query = "SELECT f FROM File f WHERE f.changed = :changed"), @NamedQuery(name = "File.findByMode", query = "SELECT f FROM File f WHERE f.mode = :mode"), @NamedQuery(name = "File.findByAttribute", query = "SELECT f FROM File f WHERE f.attribute = :attribute"), @NamedQuery(name = "File.findByGroupId", query = "SELECT f FROM File f WHERE f.groupId = :groupId"), @NamedQuery(name = "File.findByUserId", query = "SELECT f FROM File f WHERE f.userId = :userId"), @NamedQuery(name = "File.findByFileId", query = "SELECT f FROM File f WHERE f.fileId = :fileId")})
public class File implements FileEntity, Serializable {
    private static final long serialVersionUID = 1L;
    @Column(name = "name", nullable = false)
    private String name;
    @Column(name = "nominal_size", nullable = false)
    private long nominalSize;
    @Column(name = "allocation_size", nullable = false)
    private long allocationSize;
    @Column(name = "modified", nullable = false)
    @Temporal(TemporalType.TIME)
    private Date modified;
    @Column(name = "created", nullable = false)
    @Temporal(TemporalType.TIME)
    private Date created;
    @Column(name = "accessed", nullable = false)
    @Temporal(TemporalType.TIME)
    private Date accessed;
    @Column(name = "changed", nullable = false)
    @Temporal(TemporalType.TIME)
    private Date changed;
    @Column(name = "mode", nullable = false)
    private int mode;
    @Column(name = "attribute", nullable = false)
    private int attribute;
    @Column(name = "group_id", nullable = false)
    private int groupId;
    @Column(name = "user_id", nullable = false)
    private int userId;
    @Id
    @GeneratedValue(generator="files_file_id_seq")
    @SequenceGenerator(name="files_file_id_seq",sequenceName="files_file_id_seq", allocationSize=1)
    @Column(name = "file_id", nullable = false)
    private Long fileId;
    @JoinColumn(name = "parent", referencedColumnName = "directory_id")
    @ManyToOne
    private Directory parent;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "file")
    private Collection<Lock> lockCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "file1")
    private Collection<Replica> replicaCollection;

    public File() {
    }

    public File(Long fileId) {
        this.fileId = fileId;
    }

    public File(Long fileId, String name, long nominalSize, long allocationSize, Date modified, Date created, Date accessed, Date changed, int mode, int attribute, int groupId, int userId) {
        this.fileId = fileId;
        this.name = name;
        this.nominalSize = nominalSize;
        this.allocationSize = allocationSize;
        this.modified = modified;
        this.created = created;
        this.accessed = accessed;
        this.changed = changed;
        this.mode = mode;
        this.attribute = attribute;
        this.groupId = groupId;
        this.userId = userId;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public long getNominalSize() {
        return nominalSize;
    }

    public void setNominalSize(long nominalSize) {
        this.nominalSize = nominalSize;
    }

    public long getAllocationSize() {
        return allocationSize;
    }

    public void setAllocationSize(long allocationSize) {
        this.allocationSize = allocationSize;
    }

    public Date getModified() {
        return modified;
    }

    public void setModified(Date modified) {
        this.modified = modified;
    }

    public Date getCreated() {
        return created;
    }

    public void setCreated(Date created) {
        this.created = created;
    }

    public Date getAccessed() {
        return accessed;
    }

    public void setAccessed(Date accessed) {
        this.accessed = accessed;
    }

    public Date getChanged() {
        return changed;
    }

    public void setChanged(Date changed) {
        this.changed = changed;
    }

    public int getMode() {
        return mode;
    }

    public void setMode(int mode) {
        this.mode = mode;
    }

    public int getAttribute() {
        return attribute;
    }

    public void setAttribute(int attribute) {
        this.attribute = attribute;
    }

    public int getGroupId() {
        return groupId;
    }

    public void setGroupId(int groupId) {
        this.groupId = groupId;
    }

    public int getUserId() {
        return userId;
    }

    public void setUserId(int userId) {
        this.userId = userId;
    }

    public Long getFileId() {
        return fileId;
    }

    public void setFileId(Long fileId) {
        this.fileId = fileId;
    }

    public Directory getParent() {
        return parent;
    }

    public void setParent(Directory parent) {
        this.parent = parent;
    }

    public Collection<Lock> getLockCollection() {
        return lockCollection;
    }

    public void setLockCollection(Collection<Lock> lockCollection) {
        this.lockCollection = lockCollection;
    }

    public Collection<Replica> getReplicaCollection() {
        return replicaCollection;
    }

    public void setReplicaCollection(Collection<Replica> replicaCollection) {
        this.replicaCollection = replicaCollection;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (fileId != null ? fileId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof File)) {
            return false;
        }
        File other = (File) object;
        if ((this.fileId == null && other.fileId != null) || (this.fileId != null && !this.fileId.equals(other.fileId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "org.sodfs.meta.persistance.File[fileId=" + fileId + "]";
    }

    public DirectoryEntity getParentEntity() {
        return (DirectoryEntity) parent;
    }

}
